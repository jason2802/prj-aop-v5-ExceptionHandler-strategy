<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example.aop</groupId>
	<artifactId>prj-aop-v5-ExceptionHandler-strategy</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<name>prj-aop-v5-ExceptionHandler-strategy</name>
	<description>Rest API - How to use AOP to :
		1- Log entries and exit to and from method
		2- Authenticated user credential

LOGS : How to use SLF4J to :
            1- send log to console o file appender</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>


		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<spring.boot.maven.plugin.version>1.5.14.RELEASE</spring.boot.maven.plugin.version> <!-- Due to maven limitation this property cannot be inherited through import of mtt-services-parent-bom  -->

	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- Logback is provided out of the box with Spring Boot when you use one of the Spring Boot starter dependencies 
		as they include spring-boot-starter-logging providing logging without any configuration and can be altered 
		to work differently if required.
		
		-->

		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
		
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
			<version>1.6.2</version>
		</dependency>
	
		<!-- 
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-devtools</artifactId>
				<scope>runtime</scope>
			</dependency> 
		-->
		<dependency>
		    <groupId>javax.inject</groupId>
		    <artifactId>javax.inject</artifactId>
		    <version>1</version>
		</dependency>
		
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring.boot.maven.plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>build-info</goal>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<additionalProperties>
								<encoding.source>${project.build.sourceEncoding}</encoding.source>
								<encoding.reporting>${project.reporting.outputEncoding}</encoding.reporting>
								<java.source>${maven.compiler.source}</java.source>
								<java.target>${maven.compiler.target}</java.target>
							</additionalProperties>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			-->

		</plugins>
	</build>

	<repositories>
		<repository>
			<id>myMavenRepoJamesHomeWorkRead</id>
			<url>${myMavenRepoJamesHomeWorkReadUrl}</url>
		</repository>
	</repositories>


	<!-- Instruction:
	         deployment to a repository is configured in the pom.xml
	         for the respective project in the distributionManagement section
	 -->
	<distributionManagement>
		<repository>
			<id>myMavenRepoJamesHomeWorkWrite</id>
			<url>${myMavenRepoJamesHomeWorkWriteUrl}</url>
		</repository>
		<snapshotRepository>
			<id>myMavenRepoJamesHomeWorkWrite</id>
			<url>${myMavenRepoJamesHomeWorkWriteUrl}</url>
		</snapshotRepository>
	</distributionManagement>
	<!-- Instruction:
             The credentials used for the deployment are found in the <server>
              section of your setting.xml
     -->


</project>
